name: deploy-static-pages

on:
  push:
    branches:
      - source

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write

    steps:
    - name: Checkout source Branch
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        submodules: true

    - name: Install Hugo
      uses: peaceiris/actions-hugo@v2
      with:
        hugo-version: 'latest'

    - name: Build Hugo Site
      run: |
        hugo --minify
        if [ ! -d "public" ] || [ -z "$(ls -A public)" ]; then
          echo "Error: Hugo did not generate any files."
          exit 1
        fi

    - name: Get Commit Message
      id: commit_message
      run: |
        COMMIT_MSG=$(jq -r '.commits[-1].message' "$GITHUB_EVENT_PATH" | sed ':a;N;$!ba;s/\n/ /g')
        echo "commit_message<<EOF" >> $GITHUB_ENV
        echo "$COMMIT_MSG" >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Checkout main Branch
      uses: actions/checkout@v3
      with:
        ref: main
        fetch-depth: 0

    - name: Copy Generated Files to main Branch
      run: |
        # Remove existing files except the .git directory
        find . -mindepth 1 ! -regex '^./\.git\(/.*\)?' -exec rm -rf {} +
        
        # Copy generated files from Hugo build
        cp -r ../public/* .
        cp ../README.md .
        cp ../lychee.toml .

    - name: List Files
      run: |
        echo "Listing files in main branch:"
        ls -l

    - name: Commit and Push Changes
      env:
        COMMIT_MESSAGE: ${{ env.commit_message }}
      run: |
        # Configure Git
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # Commit and push changes
        git add .
        git commit -m "Deploying: $COMMIT_MESSAGE" || echo "No changes to commit."
        git push origin main

    - name: Trigger the linkcheck Workflow
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        curl -X POST \
          -H "Authorization: Bearer $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github+json" \
          https://api.github.com/repos/${{ github.repository }}/actions/workflows/linkcheck.yml/dispatches \
          -d '{"ref":"source"}'
